import AppProvider from '@/provider/AppProvider';
import ClientOnly from '@/components/ClientOnly';
import { ModeToggle } from '@/components/ModeToggle';
import type { Metadata } from 'next';
import { NextIntlClientProvider } from 'next-intl';
import { getLocale, getMessages } from 'next-intl/server';
import { Public_Sans } from 'next/font/google';
import './globals.css';

const publicSans = Public_Sans({
  variable: '--font-public-sans',
  subsets: ['latin'],
  weight: ['100', '200', '300', '400', '500', '600', '700', '800', '900'],
});

export const metadata: Metadata = {
  title: {
    default: 'Query Book',
    template: '%s | Query Book',
  },
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const locale = await getLocale();
  const messages = await getMessages();
  return (
    <html lang={locale} suppressHydrationWarning>
      <head>
        <link rel='icon' href='/logo.png' />
      </head>
      <body className={`${publicSans.className} antialiased font-public-sans`}>
        <NextIntlClientProvider messages={messages}>
          <ClientOnly>
            <AppProvider>
              <div className='font-public-sans'>{children}</div>
              {/* <div className='fixed top-[50%] translate-y-[-50%] z-[100]'></div> */}
            </AppProvider>
          </ClientOnly>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
