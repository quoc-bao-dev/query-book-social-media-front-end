import type { Config } from 'tailwindcss';

export default {
    darkMode: ['class'],
    content: [
        './src/pages/**/*.{js,ts,jsx,tsx,mdx}',
        './src/components/**/*.{js,ts,jsx,tsx,mdx}',
        './src/app/**/*.{js,ts,jsx,tsx,mdx}',
    ],
    theme: {
        extend: {
            colors: {
                background: 'var(--background)',
                foreground: 'var(--foreground)',
                card: {
                    DEFAULT: 'var(--card)',
                    foreground: 'var(--card-foreground)',
                },
                popover: {
                    DEFAULT: 'hsl(var(--popover))',
                    foreground: 'hsl(var(--popover-foreground))',
                },
                muted: {
                    DEFAULT: 'var(--muted)',
                    foreground: 'var(--muted-foreground)',
                },
                accent: {
                    DEFAULT: 'hsl(var(--accent))',
                    foreground: 'hsl(var(--accent-foreground))',
                },
                destructive: {
                    DEFAULT: 'hsl(var(--destructive))',
                    foreground: 'hsl(var(--destructive-foreground))',
                },
                primary: {
                    DEFAULT: 'rgb(var(--primary-500) / <alpha-value>)',
                    foreground:
                        'rgb(var(--primary-foreground) / <alpha-value>)',
                    '50': 'rgb(var(--primary-50) / <alpha-value>)',
                    '100': 'rgb(var(--primary-100) / <alpha-value>)',
                    '200': 'rgb(var(--primary-200) / <alpha-value>)',
                    '300': 'rgb(var(--primary-300) / <alpha-value>)',
                    '400': 'rgb(var(--primary-400) / <alpha-value>)',
                    '500': 'rgb(var(--primary-500) / <alpha-value>)',
                    '600': 'rgb(var(--primary-600) / <alpha-value>)',
                    '700': 'rgb(var(--primary-700) / <alpha-value>)',
                    '800': 'rgb(var(--primary-800) / <alpha-value>)',
                    '900': 'rgb(var(--primary-900) / <alpha-value>)',
                    '950': 'rgb(var(--primary-950) / <alpha-value>)',
                },
                secondary: {
                    DEFAULT: 'rgb(var(--secondary-500) / <alpha-value>)',
                    '50': 'rgb(var(--secondary-50) / <alpha-value>)',
                    '100': 'rgb(var(--secondary-100) / <alpha-value>)',
                    '200': 'rgb(var(--secondary-200) / <alpha-value>)',
                    '300': 'rgb(var(--secondary-300) / <alpha-value>)',
                    '400': 'rgb(var(--secondary-400) / <alpha-value>)',
                    '500': 'rgb(var(--secondary-500) / <alpha-value>)',
                    '600': 'rgb(var(--secondary-600) / <alpha-value>)',
                    '700': 'rgb(var(--secondary-700) / <alpha-value>)',
                    '800': 'rgb(var(--secondary-800) / <alpha-value>)',
                    '900': 'rgb(var(--secondary-900) / <alpha-value>)',
                    '950': 'rgb(var(--secondary-950) / <alpha-value>)',
                },

                neutral: {
                    DEFAULT: 'rgb(var(--neutral-500) / <alpha-value>)',
                    '50': 'rgb(var(--neutral-50) / <alpha-value>)',
                    '100': 'rgb(var(--neutral-100) / <alpha-value>)',
                    '200': 'rgb(var(--neutral-200) / <alpha-value>)',
                    '300': 'rgb(var(--neutral-300) / <alpha-value>)',
                    '400': 'rgb(var(--neutral-400) / <alpha-value>)',
                    '500': 'rgb(var(--neutral-500) / <alpha-value>)',
                    '600': 'rgb(var(--neutral-600) / <alpha-value>)',
                    '700': 'rgb(var(--neutral-700) / <alpha-value>)',
                    '800': 'rgb(var(--neutral-800) / <alpha-value>)',
                    '900': 'rgb(var(--neutral-900) / <alpha-value>)',
                    '950': 'rgb(var(--neutral-950) / <alpha-value>)',
                },
                info: {
                    DEFAULT: 'rgb(var(--info-500) / <alpha-value>)',
                    '50': 'rgb(var(--info-50) / <alpha-value>)',
                    '100': 'rgb(var(--info-100) / <alpha-value>)',
                    '200': 'rgb(var(--info-200) / <alpha-value>)',
                    '300': 'rgb(var(--info-300) / <alpha-value>)',
                    '400': 'rgb(var(--info-400) / <alpha-value>)',
                    '500': 'rgb(var(--info-500) / <alpha-value>)',
                    '600': 'rgb(var(--info-600) / <alpha-value>)',
                    '700': 'rgb(var(--info-700) / <alpha-value>)',
                    '800': 'rgb(var(--info-800) / <alpha-value>)',
                    '900': 'rgb(var(--info-900) / <alpha-value>)',
                    '950': 'rgb(var(--info-950) / <alpha-value>)',
                },
                success: {
                    DEFAULT: 'rgb(var(--success-500) / <alpha-value>)',
                    '50': 'rgb(var(--success-50) / <alpha-value>)',
                    '100': 'rgb(var(--success-100) / <alpha-value>)',
                    '200': 'rgb(var(--success-200) / <alpha-value>)',
                    '300': 'rgb(var(--success-300) / <alpha-value>)',
                    '400': 'rgb(var(--success-400) / <alpha-value>)',
                    '500': 'rgb(var(--success-500) / <alpha-value>)',
                    '600': 'rgb(var(--success-600) / <alpha-value>)',
                    '700': 'rgb(var(--success-700) / <alpha-value>)',
                    '800': 'rgb(var(--success-800) / <alpha-value>)',
                    '900': 'rgb(var(--success-900) / <alpha-value>)',
                    '950': 'rgb(var(--success-950) / <alpha-value>)',
                },
                warning: {
                    DEFAULT: 'rgb(var(--warning-500) / <alpha-value>)',
                    '50': 'rgb(var(--warning-50) / <alpha-value>)',
                    '100': 'rgb(var(--warning-100) / <alpha-value>)',
                    '200': 'rgb(var(--warning-200) / <alpha-value>)',
                    '300': 'rgb(var(--warning-300) / <alpha-value>)',
                    '400': 'rgb(var(--warning-400) / <alpha-value>)',
                    '500': 'rgb(var(--warning-500) / <alpha-value>)',
                    '600': 'rgb(var(--warning-600) / <alpha-value>)',
                    '700': 'rgb(var(--warning-700) / <alpha-value>)',
                    '800': 'rgb(var(--warning-800) / <alpha-value>)',
                    '900': 'rgb(var(--warning-900) / <alpha-value>)',
                    '950': 'rgb(var(--warning-950) / <alpha-value>)',
                },
                error: {
                    DEFAULT: 'rgb(var(--error-500) / <alpha-value>)',
                    '50': 'rgb(var(--error-50) / <alpha-value>)',
                    '100': 'rgb(var(--error-100) / <alpha-value>)',
                    '200': 'rgb(var(--error-200) / <alpha-value>)',
                    '300': 'rgb(var(--error-300) / <alpha-value>)',
                    '400': 'rgb(var(--error-400) / <alpha-value>)',
                    '500': 'rgb(var(--error-500) / <alpha-value>)',
                    '600': 'rgb(var(--error-600) / <alpha-value>)',
                    '700': 'rgb(var(--error-700) / <alpha-value>)',
                    '800': 'rgb(var(--error-800) / <alpha-value>)',
                    '900': 'rgb(var(--error-900) / <alpha-value>)',
                    '950': 'rgb(var(--error-950) / <alpha-value>)',
                },
                gray: {
                    DEFAULT: 'rgb(var(--gray-500) / <alpha-value>)',
                    '50': 'rgb(var(--gray-50) / <alpha-value>)',
                    '100': 'rgb(var(--gray-100) / <alpha-value>)',
                    '200': 'rgb(var(--gray-200) / <alpha-value>)',
                    '300': 'rgb(var(--gray-300) / <alpha-value>)',
                    '400': 'rgb(var(--gray-400) / <alpha-value>)',
                    '500': 'rgb(var(--gray-500) / <alpha-value>)',
                    '600': 'rgb(var(--gray-600) / <alpha-value>)',
                    '700': 'rgb(var(--gray-700) / <alpha-value>)',
                    '800': 'rgb(var(--gray-800) / <alpha-value>)',
                    '900': 'rgb(var(--gray-900) / <alpha-value>)',
                    '950': 'rgb(var(--gray-950) / <alpha-value>)',
                },

                border: 'hsl(var(--border))',
                input: 'hsl(var(--input))',
                ring: 'hsl(var(--ring))',
                chart: {
                    '1': 'hsl(var(--chart-1))',
                    '2': 'hsl(var(--chart-2))',
                    '3': 'hsl(var(--chart-3))',
                    '4': 'hsl(var(--chart-4))',
                    '5': 'hsl(var(--chart-5))',
                },
            },
            borderRadius: {
                lg: 'var(--radius)',
                md: 'calc(var(--radius) - 2px)',
                sm: 'calc(var(--radius) - 4px)',
            },

            boxShadow: {
                1: 'var(--shadow-sm)',
                2: 'var(--shadow-md)',
                3: 'var(--shadow-lg)',
                4: 'var(--shadow-xl)',
                5: 'var(--shadow-2xl)',
                inner: 'var(--shadow-inner)',
            },
        },
    },
    plugins: [require('tailwindcss-animate')],
    corePlugins: {
        backgroundOpacity: true,
    },
} satisfies Config;
